#!/bin/bash 

name: Upvote

on:
  pull_request_target: 
    types: [labeled]

jobs:
        
  new_issue:
    
    if: ${{ github.event.label.name == 'Upvote - Course Automation' }} && ${{ github.repository == 'Renstrom/upvote'}}
    runs-on: ubuntu-latest
    name: Create an issue if none exists
    outputs:
          output1: ${{ steps.issue.outputs.number }}
    steps:
      - uses: actions/checkout@v2
      - uses: nickderobertis/check-if-issue-exists-action@master
        name: Check if Issue Exists
        id: check_if_issue_exists
        with:
          repo: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Upvote projects - Course Automation"
          labels:
      - name: Create issue    
        uses: JasonEtco/create-an-issue@v2
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            update_existing: true
        id: issue
              
  first_comment:
    needs: new_issue
    if: ${{github.run_number == 1}}
    runs-on: ubuntu-latest
    name: Create first comment
    steps:
      - uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ needs.new_issue.outputs.output1 }}
          body: |
            The top-list will be available here once reactions are added to the projects in this thread!

  other_comments:
    needs: new_issue
    runs-on: ubuntu-latest
    name: Create comment
    steps:
      - uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{  needs.new_issue.outputs.output1}}
          body: |
            Title of pull request: ${{ github.event.pull_request.title }}
            Link to pull request: ${{ github.event.pull_request.html_url }}
            You can view the repository [here](https://github.com/${{github.event.pull_request.head.repo.full_name}}/tree/${{ github.head_ref }})       
      - name: Checkout
        uses: actions/checkout@v1
      - name: Comment on PR
        uses: thollander/actions-comment-pull-request@master
        with:
          message: 'A comment has been added to the following thread: #${{  needs.new_issue.outputs.output1 }}. People can now upvote your project!'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test json echo
        id: commentid 
        run: |

          curl -s https://api.github.com/repos/Renstrom/upvote/issues/${{  needs.new_issue.outputs.output1}}/comments | jq -c '.[].id' | while read id ; do
              echo "'{${id}:$( curl -s -H "Accept: application/vnd.github.squirrel-girl-preview+json" https://api.github.com/repos/Renstrom/upvote/issues/comments/${id}/reactions | jq 'map(select(.content=="+1"))' | jq length):title:$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/Renstrom/upvote/issues/comments/${id} | jq '.body' | cut -d '\' -f1 | cut -d: -f2 ) }'" >> text.txt
          done

      - run: while read t; do echo $(t=${t#*{}; echo ${t%\}*}); done <text.txt #Lista med info

      - run: while read t; do echo $(t=${t#*{}; echo ${t%\}*}) >> info.txt; done <text.txt #LÃ¤gg in all info i info.txt

      - run: | 
          while read t; do 
            let a=echo cut -d':' -f2
            if [$ -gt 0]
            then
              echo $t >> result.txt
            fi
          done < info.txt
          while read p; do 
              echo $p
          done < result.txt

      




              







